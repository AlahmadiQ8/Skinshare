version: '3.4'
services:
  db:
    container_name: skincare_pg_db
    image: postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=docker
    volumes:
      - skincare_db:/var/lib/postgresql/data
    networks:
      - backend
  skinshare:
    depends_on: 
      - db
    build:
      context: Skinshare.Web
      dockerfile: Dockerfile
    restart: always
    expose:
      - "5000"
    environment: {
      ASPNETCORE_URLS: http://+:5000,
      ConnectionString: "Host=localhost;Port=5432;Database=skinshare;Username=postgres;Password=docker;Pooling=true;Minimum Pool Size=0;Maximum Pool Size=100;Connection Idle Lifetime=300;Internal Command Timeout=15;"
    }
    volumes:
      - $HOME/.aws:/root/.aws
    networks:
      - backend
  reverseproxy:
    build:
      context: ./reverseproxy
      dockerfile: Dockerfile
    ports:
      - "8080:80"
    restart: always
    depends_on: 
      - skinshare
    networks: 
      - backend

volumes:
  skincare_db: {}

networks:
  backend:
